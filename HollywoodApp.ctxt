#BlueJ class context
comment0.target=HollywoodApp
comment0.text=\r\n\ HollywoodApp.java\r\n\ \r\n\ This\ class\ generates\ an\ undirected\ bipartite\ graph\ based\r\n\ on\ a\ txt\ file\ of\ movie\ casts\ and\ creates\ a\ new\r\n\ Bechdel-like\ value\ for\ each\ movie\ that\ captures\ whether\r\n\ the\ movie\ has\ over\ 48%\ women\ in\ its\ cast.\ It\ also\ enables\r\n\ the\ user\ to\ save\ the\ graph\ to\ a\ tgf\ file,\ get\ a\ String\r\n\ representation\ of\ the\ graph,\ and\ get\ a\ list\ of\ the\r\n\ movies\ that\ have\ over\ 48%\ women\ in\ its\ cast.\r\n\ \r\n\ People\ we\ consulted\ with\:\r\n\ We\ went\ to\ Angel\ Cooper's\ office\ hours,\ emailed\r\n\ the\ CS230\ instructors\ and\ got\ replied\ by\ Takis\ Metaxas\r\n\ and\ Smaranda\ Sandu.\ Thank\ you\ so\ much\ for\ your\r\n\ instructions\ and\ guidance\!\r\n\ \r\n\ @author\ (Ashley\ (as126),\ Linda\ (ld104),\ Agnes\ (yq100))\r\n\ @version\ (04/16/2023)\r\n
comment1.params=
comment1.target=HollywoodApp()
comment1.text=\r\n\ The\ constructor\ for\ HollywoodApp\ initializes\ the\ instance\r\n\ variables\:\ the\ adjacency\ list\ hollywoodRelationalGraph\ and\r\n\ hastables\ actorToGender\ and\ actorsInMovie.\r\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\r\n\ The\ main()\ method\ provides\ basic\ testing\ for\ the\r\n\ methods\ above.\r\n\ \r\n\ @throws\ IOException\r\n
comment2.params=fileName
comment2.target=void\ createGraphFromFile(java.lang.String)
comment2.text=\r\n\ This\ method\ creates\ an\ undirected\ graph\ with\ vertices\r\n\ representing\ movie\ names\ and\ actor\ names\ from\ a\ txt\r\n\ file\ of\ movie\ casts\ using\ an\ adjacency\ list.\ The\ edges\r\n\ reflect\ the\ relationship\ that\ an\ actor\ played\ in\r\n\ the\ movie.\ It\ also\ keeps\ track\ of\ the\ genders\ of\r\n\ the\ actors.\r\n\ \r\n\ @param\ fileName\ a\ String\ that\ denotes\ the\ name\ of\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ txt\ file\ to\ read\ from\r\n
comment3.params=outFileName
comment3.target=void\ saveIntoTGF(java.lang.String)
comment3.text=\r\n\ This\ method\ saves\ the\ graph\ into\ a\ .tgf\ file\ that\ can\r\n\ be\ opened\ in\ yED\ by\ using\ the\ saveTGF()\ method\r\n\ of\ the\ AdjListsGraph\ class.\r\n\ \r\n\ @param\ outFileName\ a\ String\ that\ denotes\ the\ name\ of\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ output\ file\r\n
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\r\n\ This\ method\ returns\ a\ String\ representation\ of\ the\r\n\ graph\ by\ using\ the\ toString()\ method\ of\ the\r\n\ AdjListsGraph\ class.\r\n\ \r\n\ @return\ a\ String\ representation\ of\ the\ graph\r\n
comment5.params=fName
comment5.target=void\ bechdelTestingToFile(java.lang.String)
comment5.text=\r\n\ This\ method\ writes\ the\ result\ of\ the\ new\ Bechdel\r\n\ Test\ into\ a\ text\ file.\ It\ includes\ a\ list\ of\r\n\ the\ names\ of\ the\ movies\ that\ have\ over\ 48%\ of\r\n\ women\ in\ the\ cast\ and\ another\ list\ of\ those\ that\r\n\ do\ not\ as\ well\ as\ their\ Bechdel\ Value.\r\n\ \r\n\ @param\ fName\ a\ String\ that\ denotes\ the\ name\ of\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ output\ file\r\n
comment6.params=
comment6.target=java.lang.String\ findPassedTest()
comment6.text=\r\n\ This\ is\ a\ helper\ method\ that\ returns\ a\ String\r\n\ representation\ of\ whether\ the\ movies\ have\ over\ 48%\r\n\ of\ women\ in\ the\ cast\ and\ calculates\ their\ Bechdel\r\n\ Value.\r\n\ \r\n\ @return\ a\ report\ of\ whether\ the\ movies\ have\ over\ 48%\r\n\ \ \ \ \ \ \ \ \ of\ women\ in\ the\ cast\r\n
comment7.params=actorName
comment7.target=java.util.LinkedList\ moviesOfActor(java.lang.String)
comment7.text=\r\n\ Returns\ a\ linked\ list\ of\ movies\ in\ which\ the\ given\ actor\ appears.\r\n\ \r\n\ @param\ actorName\ the\ name\ of\ the\ actor\ to\ search\ for\r\n\ @return\ a\ linked\ list\ of\ movies\ in\ which\ the\ given\ actor\ appears\r\n
comment8.params=movieName
comment8.target=java.util.LinkedList\ actorsInMovie(java.lang.String)
comment8.text=\r\n\ Returns\ a\ linked\ list\ of\ actors\ in\ the\ given\ movie.\r\n\ \r\n\ @param\ movieName\ the\ name\ of\ the\ movie\ to\ search\ for\r\n\ @return\ a\ linked\ list\ of\ actors\ in\ the\ given\ movie,\ or\ an\ empty\ list\ if\ the\r\n\ \ \ \ \ \ \ \ \ movie\ is\ not\ found\r\n
comment9.params=actor1\ actor2\ fileName
comment9.target=int\ findDegreeOfSeparation(java.lang.String,\ java.lang.String,\ java.lang.String)
comment9.text=\r\n\ \r\n\ Finds\ the\ degree\ of\ separation\ between\ two\ actors\ using\ a\ BFS\ algorithm\ on\ a\r\n\ given\ file\ of\ movies\ and\ actors.\r\n\ \r\n\ @param\ actor1\ \ \ the\ name\ of\ the\ first\ actor\r\n\ \r\n\ @param\ actor2\ \ \ the\ name\ of\ the\ second\ actor\r\n\ \r\n\ @param\ fileName\ the\ name\ of\ the\ file\ containing\ the\ list\ of\ movies\ and\ actors\r\n\ \r\n\ @return\ the\ degree\ of\ separation\ between\ the\ two\ actors,\ or\ -1\ if\ they\ are\r\n\ \ \ \ \ \ \ \ \ not\ connected\r\n\ \r\n\ @throws\ IOException\ if\ there\ is\ an\ error\ reading\ the\ file\r\n
numComments=11
